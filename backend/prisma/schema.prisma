datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tenant {
  id          String       @id @default(cuid())
  name        String
  slug        String       @unique
  plan        String       // "saas" ou "saas+site"
  domain      String?      // Ex: academiax.edupay.com ou custom
  siteData    Json?        // Dados para site público
  status      String       @default("ativo") // "ativo", "suspenso", "teste", "cancelado"
  createdAt   DateTime     @default(now())
  users       User[]
  alunos      Aluno[]
  mensalidades Mensalidade[]
  responsaveis Responsavel[]

  @@index([slug])
}

model User {
  id           String       @id @default(cuid())
  name         String?
  email        String       @unique
  passwordHash String       // Hash com bcrypt
  role         String       // "ADMIN", "ALUNO", "SUPERADMIN", "PROFESSOR", "RH", "SEGURANCA", "OUTRO"
  departamento String?      // Opcional: "Educação", "RH", "Segurança", etc.
  tenantId     String?
  tenant       Tenant?      @relation(fields: [tenantId], references: [id])
  createdAt    DateTime     @default(now())
  mensalidades Mensalidade[]

  @@index([email])
}

model Responsavel {
  id        String    @id @default(cuid())
  nome      String
  email     String?   // Para envio de boletos
  cpf       String?   // Para validação no Mercado Pago
  telefone  String?   // Opcional para notificações
  tenantId  String
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  alunos    Aluno[]   // Um responsável pode ter vários alunos
  createdAt DateTime  @default(now())

  @@index([tenantId])
}

model Aluno {
  id           String       @id @default(cuid())
  name         String
  birthDate    DateTime?    // Usado para calcular idade
  responsavelId String?      // Relaciona com responsável para menores
  responsavel  Responsavel? @relation(fields: [responsavelId], references: [id])
  tenantId     String
  tenant       Tenant       @relation(fields: [tenantId], references: [id])
  mensalidades Mensalidade[]
  createdAt    DateTime     @default(now())

  @@index([tenantId])
  @@index([responsavelId])
}

model Mensalidade {
  id         String     @id @default(cuid())
  alunoId    String?    // Para mensalidades de alunos
  userId     String?    // Para despesas de funcionários
  tenantId   String
  valor      Float
  vencimento DateTime
  status     String     @default("PENDENTE")
  tipo       String     @default("aluno") // "aluno" ou "funcionario"
  aluno      Aluno?     @relation(fields: [alunoId], references: [id])
  user       User?      @relation(fields: [userId], references: [id])
  tenant     Tenant     @relation(fields: [tenantId], references: [id])
  createdAt  DateTime   @default(now())

  @@index([tenantId, alunoId])
  @@index([tenantId, userId])
}